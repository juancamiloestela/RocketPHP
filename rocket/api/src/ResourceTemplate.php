<?php echo "<?php"; ?>

/**
 * This class has been autogenerated by RocketPHP
 */
namespace Resources;

class <?php echo $resourceName; ?> extends \Rocket\Api\Resource{

	protected $fields = array("<?php echo implode('","', array_keys((array)$resource->properties)); ?>");
	protected static $notExposed = array("<?php echo implode('","', $notExposed); ?>");

	<?php foreach ($resource->properties as $propertyName => $property): ?> 
		function receive_<?php echo $propertyName; ?>($value, &$errors) {
			$errors = array_merge($errors, $this->validate_<?php echo $propertyName; ?>($value)); 
			<?php if (isset($property->on_receive)):
				$on_receive = explode('.', $property->on_receive); ?>
			\Rocket::call(array("<?php echo $on_receive[0]; ?>", "<?php echo $on_receive[1];?>"), $value, $errors);
			<?php endif; ?>
			return $value;
		}
	<?php endforeach; ?>
}
